---
//Dynamic tags
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

/* Advanced JavaScript: Generate pages from existing tags: https://docs.astro.build/en/tutorial/5-astro-api/2/#advanced-javascript-generate-pages-from-existing-tags 

Now the list of all blog posts is filtered before it is sent to each page as props.

(from the first ecample:) TAKEAWAY

If you need information to construct the page routes, write it inside getStaticPaths().

To receive information in the HTML template of a page route, write it outside getStaticPaths().

https://docs.astro.build/en/tutorial/5-astro-api/2/ */

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  // return [
  //   { params: { tag: "astro" }, props: { posts: allPosts } },
  //   { params: { tag: "successes" }, props: { posts: allPosts } },
  //   { params: { tag: "community" }, props: { posts: allPosts } },
  //   { params: { tag: "blogging" }, props: { posts: allPosts } },
  //   { params: { tag: "setbacks" }, props: { posts: allPosts } },
  //   { params: { tag: "learning in public" }, props: { posts: allPosts } },
  // ];

  //params: A value that defines the name of a page route generated dynamically.
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post) =>
//   post.frontmatter.tags.includes(tag)
// );
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag} - dynamic version (lacj)</p>
  <ul>
    <!-- {
      filteredPosts.map((post) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    } -->
    {
      // filteredPosts.map((post) => (
      //   <BlogPost url={post.url} title={post.frontmatter.title} />
      // ))
      posts.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
